Зависимости, сборка проекта
===========================


Зависимости
-----------

Оборудование, для которого создавалось ПО:

    - антенна ID ISC.ANT300/300-A
    - ридер ID ISC.MR200 A
    - метки по 224 байта

Требования для RFID-оборудования:
    - Windows 7 и выше
    - наличие COM-порта для подключения ридера

Для сборки С++-модуля:

    - Microsoft Visual Studio 2012
    - FEIG SDK (ID ISC.SDK.Win V4.7.0)

Для Python-модуля:

    - Python 3.6.0 32 bit
    - flask == 0.12 (для веб-сервера)

Для сборки документации:

    - Python 3.6.0 32 bit
    - Sphinx == 1.5.3
    - sphinxcontrib-httpdomain == 1.5.0
    - sphinx_rtd_theme == 0.2.2

.. note::

    Зависимости для Python-модуля и сборки документации могут быть установлены с помощью pip следующим образом:

    .. sourcecode:: console

        pip install -r requirements.txt

.. note::

    Зависимости в Windows 7 и Visual Studio 2012 исходят из того, что FEIG SDK (ID ISC.SDK.Win V4.7.0) была собрана
    с инструментами сборки версии VC110 (Visual Studio 2012)


Подготовка рабочего окружения, сборка проекта
---------------------------------------------

1. Клонировать проект с GitHub'а
2. Скопировать в папку ``/lib`` заголовочные файлы FEIG SDK с сохранением первоначальной иерархии папок и файлов
3. Скопировать в папку ``/module`` библиотеки ``FedmIscCoreVC110.dll``, ``feisc.dll``, ``fefu.dll``, ``fecom.dll``, ``fetcl.dll`` из FEIG SDK
4. Установить зависимости для Python-модуля
5. Собрать C++-модуль

    1. В Visual Studio открыть проект, выбрав файл ``/RFID/RFID.vcxproj``
    2. Собрать **32-битную Release-версию**
    3. Итоговый файл ``RFID.dll`` окажется в папке ``/module``

6. Теперь доступны два выбора для работы с ридерами:

    - Работать через ``logic.py``
    - Запустить сервер (``server.py``) и работать через WebAPI

.. note::

    Важно, чтобы разрядность, под которую собран RFID.dll, и разрядность интерпретатора Python были одинаковыми — **x32**.
    Однако, возможно, всё будет работать, если и то, и другое будет 64-разрядными.


Сборка документации
-------------------

1. Перейти в папку ``/docs``
2. В консоли ввести следующую команду:

    .. sourcecode:: console

        make html

3. Собранная документация окажется в папке ``/docs/_build/html``
